segments(ki.data[4,3], -20, y1 = ki.data[4,2]/2, lty = 2,
col = "#b2df8a")
segments(ki.data[5,3], -20, y1 = ki.data[5,2]/2, lty = 2,
col = "#33a02c")
segments(x0 = -20,
y0 = ki.data[1,2]/2,
x1 =ki.data[1,3],
y1 = ki.data[1,2]/2, lty = 2,
col = "#000000")
segments(x0 = -20,
y0 = ki.data[2,2]/2,
x1 =ki.data[2,3],
y1 = ki.data[2,2]/2, lty = 2,
col = "#bcbddc")
segments(x0 = -20,
y0 = ki.data[3,2]/2,
x1 =ki.data[3,3],
y1 = ki.data[3,2]/2, lty = 2,
col = "#756bb1")
segments(x0 = -20,
y0 = ki.data[4,2]/2,
x1 =ki.data[4,3],
y1 = ki.data[4,2]/2, lty = 2,
col = "#b2df8a")
segments(x0 = -20,
y0 = ki.data[5,2]/2,
x1 =ki.data[5,3],
y1 = ki.data[5,2]/2, lty = 2,
col = "#33a02c")
#dev.off()
#insert.data.points
#?par
#x1, x2, y1, y2
#dev.off()
par(fig = c(0.4,0.95, 0.35, 0.95), new = T)
insert.data.points$orig.condition
table(mypallete[insert.data.points$orig.condition])
insert.data.points$V.r
plot(V.r ~ conc.r, data = insert.data.points,
col = mypallete[insert.data.points$orig.condition],
#type = "p",
#     col = c('#bcbddc', '#756bb1', '#b2df8a', '#33a02c', '#000000'),
ylab = expression("V"^-1),
xlab = expression("[ATP]"^-1),
pch = 1,
cex = 0.5,
axes = F,
frame.plot = T,
mgp = c(0.3,1,1),
xlim = c(-0.03, 0.14),
ylim = c(-2, 600)
)
#?plot
abline(v = 0, lwd = 2, col = "grey50")
abline(h = 0, lwd = 2, col = "grey50")
abline(a = 1/ki.data[1,2], b= ki.data[1,3]/ki.data[1,2], col = "#000000")
abline(a = 1/ki.data[2,2], b= ki.data[2,3]/ki.data[2,2], col = "#bcbddc")
abline(a = 1/ki.data[3,2], b= ki.data[3,3]/ki.data[3,2], col = "#756bb1")
abline(a = 1/ki.data[4,2], b= ki.data[4,3]/ki.data[4,2], col = "#b2df8a")
abline(a = 1/ki.data[5,2], b= ki.data[5,3]/ki.data[5,2], col = "#33a02c")
dev.off()
list.files()
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
##------------------------------------------------------------------------------
rep(c("A", "B"), each = 2)
str(rep(LETTERS[1:8], each = 3))
str(rep(6:8, times = 8))
rep(c(100e-6 / c(10^c(0:6)), 0), times = 3)
lookuptable <-
tibble(row = rep(LETTERS[1:8], times = 3),
col = as.character(rep(7:9, each = 8))) %>%
mutate(conc = rep(c(400 / 2^c(0:6),0), times = 3),
condition = rep(c("Vehicle", "ApoA - 3 ÂµM", "ApoA - 1 ÂµM "), each = 8))
lookuptable
extinction.coef <- 6220
parse_plate <- function(data.preproc.i){
data.preproc.i %>%
mutate(`Time(hh:mm:ss)` = as.numeric(.[1,"Time(hh:mm:ss)"]/60)) %>%
rename("time" = `Time(hh:mm:ss)`) %>%
mutate(row = LETTERS[1:8]) %>%
gather(col,abs, -time, -timepoint, -row) %>%
dplyr::select(-timepoint) #%>%
#  mutate(col =str_pad(col, 2, "left", "0"))
}
data.raw <- read_tsv("20190809_apoA_adptitration.txt" , skip = 2,
col_types = cols("Time(hh:mm:ss)" = col_time()))
data.raw
data.preproc <-
data.raw[c(1:nrow(data.raw) %% 9) != 0,1:14] %>%
dplyr::select(-2) %>%
mutate(timepoint = c(0:c(n()-1)) %/%8) %>%
slice(1:(n()-2))
data.preproc
data.tidy <-
data.preproc %>%
dplyr::group_by(timepoint) %>%
do(parse_plate(.)) %>%
ungroup() %>%
dplyr::select(-timepoint) %>%
mutate(abs = as.numeric(abs)) %>%
dplyr::select(row, col, abs, time) %>%
inner_join(lookuptable)
data.tidy
data.tidy %>%
ggplot(aes(x=time, y = abs)) +
geom_point() +
facet_grid(row~col) +
scale_y_continuous(limits = c(0,2))
data.norm <- data.tidy %>%
left_join(data.tidy %>%
filter(time == 0) %>%
dplyr::select(-time) %>%
rename(abs.0 = "abs")) %>%
mutate(abs.norm = abs - abs.0)
data.norm
data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
ggplot(aes(x=time, y = abs.norm)) +
geom_smooth() +
geom_point() +
labs(y= "OD340", x = "[ADP] (uM)")  +
theme_bw() +
scale_y_continuous(limits = c(0,0.75)) +
facet_grid(~condition)
ggsave('adp_titration_abs_raw.png', height = 3, width = 6, units = "in", dpi = 300)
data.norm %>%
group_by(condition, conc) %>%
arrange(time) %>%
mutate(velocity = (abs.norm - lag(abs.norm, 3))) %>%
filter(time > 40) %>%
ggplot(aes(x=time, y = velocity)) +
geom_smooth() +
geom_point(shape = ".") +
#  geom_smooth() +
labs(y= "Velocity\n(OD340/min)", x = "time(s)")  +
theme_bw() +
#   scale_y_continuous(limits= c(-0.01,0.3)) +
facet_grid(condition~conc)
volume <- 200e-6 # in L
protein.ugmL <- 50
protein.mg <- protein.ugmL*volume
protein.mg
path.length <- 0.5
extinction.coef
data.mm <- data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
group_by(conc, condition, row, col) %>%
arrange(time) %>%
mutate(d.od = (abs.norm - lag(abs.norm, 6)),
d.t = (time - lag(time, 6)),
velocity = d.od/d.t*60) %>% #od/min
filter(time > 60, time < 400) %>%
group_by(conc, condition, row, col) %>%
summarise(V.od = mean(velocity)) %>%
mutate(V = V.od/extinction.coef*volume/protein*1e9/path.length)
data.mm
data.0 <- data.mm %>%
ungroup() %>%
filter(conc == 0) %>%
dplyr::select(-conc, - row, -col, - V.od) %>%
rename(V.0 = V)
##------------------------------------------------------------------------------
rep(c("A", "B"), each = 2)
str(rep(LETTERS[1:8], each = 3))
str(rep(6:8, times = 8))
rep(c(100e-6 / c(10^c(0:6)), 0), times = 3)
lookuptable <-
tibble(row = rep(LETTERS[1:8], times = 3),
col = as.character(rep(7:9, each = 8))) %>%
mutate(conc = rep(c(400 / 2^c(0:6),0), times = 3),
condition = rep(c("Vehicle", "ApoA - 3 ÂµM", "ApoA - 1 ÂµM "), each = 8))
lookuptable
extinction.coef <- 6220
parse_plate <- function(data.preproc.i){
data.preproc.i %>%
mutate(`Time(hh:mm:ss)` = as.numeric(.[1,"Time(hh:mm:ss)"]/60)) %>%
rename("time" = `Time(hh:mm:ss)`) %>%
mutate(row = LETTERS[1:8]) %>%
gather(col,abs, -time, -timepoint, -row) %>%
dplyr::select(-timepoint) #%>%
#  mutate(col =str_pad(col, 2, "left", "0"))
}
data.raw <- read_tsv("20190809_apoA_adptitration.txt" , skip = 2,
col_types = cols("Time(hh:mm:ss)" = col_time()))
data.raw
data.preproc <-
data.raw[c(1:nrow(data.raw) %% 9) != 0,1:14] %>%
dplyr::select(-2) %>%
mutate(timepoint = c(0:c(n()-1)) %/%8) %>%
slice(1:(n()-2))
data.preproc
list.files()
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
##------------------------------------------------------------------------------
rep(c("A", "B"), each = 2)
str(rep(LETTERS[1:8], each = 3))
str(rep(6:8, times = 8))
rep(c(100e-6 / c(10^c(0:6)), 0), times = 3)
lookuptable <-
tibble(row = rep(LETTERS[1:8], times = 3),
col = as.character(rep(7:9, each = 8))) %>%
mutate(conc = rep(c(400 / 2^c(0:6),0), times = 3),
condition = rep(c("Vehicle", "ApoA - 3 ÂµM", "ApoA - 1 ÂµM "), each = 8))
lookuptable
extinction.coef <- 6220
parse_plate <- function(data.preproc.i){
data.preproc.i %>%
mutate(`Time(hh:mm:ss)` = as.numeric(.[1,"Time(hh:mm:ss)"]/60)) %>%
rename("time" = `Time(hh:mm:ss)`) %>%
mutate(row = LETTERS[1:8]) %>%
gather(col,abs, -time, -timepoint, -row) %>%
dplyr::select(-timepoint) #%>%
#  mutate(col =str_pad(col, 2, "left", "0"))
}
data.raw <- read_tsv("20190809_apoA_adptitration.txt" , skip = 2,
col_types = cols("Time(hh:mm:ss)" = col_time()))
data.raw
setwd("~/apoptolidin/ED_Fig3e")
data.raw <- read_tsv("20190809_apoA_adptitration.txt" , skip = 2,
col_types = cols("Time(hh:mm:ss)" = col_time()))
data.raw
data.preproc <-
data.raw[c(1:nrow(data.raw) %% 9) != 0,1:14] %>%
dplyr::select(-2) %>%
mutate(timepoint = c(0:c(n()-1)) %/%8) %>%
slice(1:(n()-2))
data.preproc
data.tidy <-
data.preproc %>%
dplyr::group_by(timepoint) %>%
do(parse_plate(.)) %>%
ungroup() %>%
dplyr::select(-timepoint) %>%
mutate(abs = as.numeric(abs)) %>%
dplyr::select(row, col, abs, time) %>%
inner_join(lookuptable)
data.tidy
data.tidy %>%
ggplot(aes(x=time, y = abs)) +
geom_point() +
facet_grid(row~col) +
scale_y_continuous(limits = c(0,2))
data.norm <- data.tidy %>%
left_join(data.tidy %>%
filter(time == 0) %>%
dplyr::select(-time) %>%
rename(abs.0 = "abs")) %>%
mutate(abs.norm = abs - abs.0)
data.norm
data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
ggplot(aes(x=time, y = abs.norm)) +
geom_smooth() +
geom_point() +
labs(y= "OD340", x = "[ADP] (uM)")  +
theme_bw() +
scale_y_continuous(limits = c(0,0.75)) +
facet_grid(~condition)
data.norm %>%
group_by(condition, conc) %>%
arrange(time) %>%
mutate(velocity = (abs.norm - lag(abs.norm, 3))) %>%
filter(time > 40) %>%
ggplot(aes(x=time, y = velocity)) +
geom_smooth() +
geom_point(shape = ".") +
#  geom_smooth() +
labs(y= "Velocity\n(OD340/min)", x = "time(s)")  +
theme_bw() +
#   scale_y_continuous(limits= c(-0.01,0.3)) +
facet_grid(condition~conc)
volume <- 200e-6 # in L
protein.ugmL <- 50
protein.mg <- protein.ugmL*volume
protein.mg
path.length <- 0.5
extinction.coef
data.mm <- data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
group_by(conc, condition, row, col) %>%
arrange(time) %>%
mutate(d.od = (abs.norm - lag(abs.norm, 6)),
d.t = (time - lag(time, 6)),
velocity = d.od/d.t*60) %>% #od/min
filter(time > 60, time < 400) %>%
group_by(conc, condition, row, col) %>%
summarise(V.od = mean(velocity)) %>%
mutate(V = V.od/extinction.coef*volume/protein*1e9/path.length)
data.0 <- data.mm %>%
ungroup() %>%
filter(conc == 0) %>%
dplyr::select(-conc, - row, -col, - V.od) %>%
rename(V.0 = V)
data.mm.norm <- data.mm %>%
left_join(data.0) %>%
mutate(V = V - V.0)
data.mm <- data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
group_by(conc, condition, row, col) %>%
arrange(time) %>%
mutate(d.od = (abs.norm - lag(abs.norm, 6)),
d.t = (time - lag(time, 6)),
velocity = d.od/d.t*60) %>% #od/min
filter(time > 60, time < 400) %>%
group_by(conc, condition, row, col) %>%
summarise(V.od = mean(velocity)) %>%
mutate(V = V.od/extinction.coef*volume/protein*1e9/path.length)
protein <- protein.ugmL
path.length <- 0.5
extinction.coef
data.mm <- data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
group_by(conc, condition, row, col) %>%
arrange(time) %>%
mutate(d.od = (abs.norm - lag(abs.norm, 6)),
d.t = (time - lag(time, 6)),
velocity = d.od/d.t*60) %>% #od/min
filter(time > 60, time < 400) %>%
group_by(conc, condition, row, col) %>%
summarise(V.od = mean(velocity)) %>%
mutate(V = V.od/extinction.coef*volume/protein*1e9/path.length)
data.0 <- data.mm %>%
ungroup() %>%
filter(conc == 0) %>%
dplyr::select(-conc, - row, -col, - V.od) %>%
rename(V.0 = V)
data.mm.norm <- data.mm %>%
left_join(data.0) %>%
mutate(V = V - V.0)
#   group_by(conc, condition, row, col) %>%
#   summarise(V.od = mean(velocity)) %>%
#   mutate(V = V.od/extinction.coef*1e-6/protein) %>% #od/E = Moles/min
#   left_join(data.0) %>%
#   mutate(V = V - V.0)
#
# data.mm$d.t
# data.norm
#
# data.mm
library(drc)
library(forcats)
model.drm.kd <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(condition, 1),
fct = MM.2(names = c("Vmax", "Kd")))
model.drm.Vmax <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(1, condition),
fct = MM.2(names = c("Vmax", "Kd")))
model.drm <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(condition, condition),
fct = MM.2(names = c("Vmax", "Kd")))
summary(model.drm)
dev.off()
anova(model.drm, model.drm.kd)
pdf("MMplot_winsert_uncompetitive.pdf", width = 6, height = 5)
####----------------------------------------------------------------------------
def.off
####----------------------------------------------------------------------------
def.off()
####----------------------------------------------------------------------------
dev.off()
par(mar = c(5,5,4,4)) #bltr
uconds <- unique(model.drm$origData$condition)
par(fig = c(0,1,0,1))
plot(model.drm,
log = "",
xlab = "[ADP] (µM)",
ylab =  expression("nMoles ATP min"^-1*"mg"^-1),
main = "Apoptolidin A is an uncompetitive inhibitor vs. ADP?",
col = c("red3", "black"),
lty = c(1,1),
legend = F,
ylim = c(0,550))
legend(x = 0, y = 550, legend = c("Vehicle", "Apoptolidin A - 1ÂµM"),
col = c("black", "red3"), pch = c(2, 1), lty = c(1,1),
bty = 'n')
coefs <- coef(model.drm)
protein <- protein.mg
path.length <- 0.5
extinction.coef
data.mm <- data.norm %>%
#mutate(fraction = as.factor(fraction)) %>%
group_by(conc, condition, row, col) %>%
arrange(time) %>%
mutate(d.od = (abs.norm - lag(abs.norm, 6)),
d.t = (time - lag(time, 6)),
velocity = d.od/d.t*60) %>% #od/min
filter(time > 60, time < 400) %>%
group_by(conc, condition, row, col) %>%
summarise(V.od = mean(velocity)) %>%
mutate(V = V.od/extinction.coef*volume/protein*1e9/path.length)
data.0 <- data.mm %>%
ungroup() %>%
filter(conc == 0) %>%
dplyr::select(-conc, - row, -col, - V.od) %>%
rename(V.0 = V)
data.mm.norm <- data.mm %>%
left_join(data.0) %>%
mutate(V = V - V.0)
#   group_by(conc, condition, row, col) %>%
#   summarise(V.od = mean(velocity)) %>%
#   mutate(V = V.od/extinction.coef*1e-6/protein) %>% #od/E = Moles/min
#   left_join(data.0) %>%
#   mutate(V = V - V.0)
#
# data.mm$d.t
# data.norm
#
# data.mm
library(drc)
library(forcats)
model.drm.kd <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(condition, 1),
fct = MM.2(names = c("Vmax", "Kd")))
model.drm.Vmax <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(1, condition),
fct = MM.2(names = c("Vmax", "Kd")))
model.drm <- drm (V ~ conc, condition,
data = data.mm.norm %>%
filter(condition != "ApoA - 3 ÂµM") %>%
ungroup() %>%
mutate(condition = as.factor(condition)) %>%
mutate(condition = fct_relevel(condition, "Vehicle")),
pmodels = data.frame(condition, condition),
fct = MM.2(names = c("Vmax", "Kd")))
summary(model.drm)
dev.off()
anova(model.drm, model.drm.kd)
####----------------------------------------------------------------------------
dev.off()
par(mar = c(5,5,4,4)) #bltr
uconds <- unique(model.drm$origData$condition)
par(fig = c(0,1,0,1))
plot(model.drm,
log = "",
xlab = "[ADP] (µM)",
ylab =  expression("nMoles ATP min"^-1*"mg"^-1),
main = "Apoptolidin A is an uncompetitive inhibitor vs. ADP?",
col = c("red3", "black"),
lty = c(1,1),
legend = F,
ylim = c(0,550))
legend(x = 0, y = 550, legend = c("Vehicle", "Apoptolidin A - 1ÂµM"),
col = c("black", "red3"), pch = c(2, 1), lty = c(1,1),
bty = 'n')
coefs <- coef(model.drm)
ki.data <- data.frame(Vmax = coefs[1:2],
conc = c(0,1)) %>%
mutate(Vmax.r = 1/Vmax)
ki.model <- lm(Vmax.r ~ conc + 1, data = ki.data)
coefficients(ki.model)[1]/coefficients(ki.model)[2]
segments(coefs[3], -20, y1 = coefs[1]/2, lty = 2,
col = adjustcolor("black", 1))
segments(coefs[4], -20, y1 = coefs[2]/2, lty = 2,
col = adjustcolor("red", 1))
segments(x0 = -20, y0 = coefs[1]/2, x1 =coefs[3], y1 = coefs[1]/2, lty = 2,
col = adjustcolor("black", 1))
segments(x0 = -20, y0 = coefs[2]/2, x1 =coefs[4], y1 = coefs[2]/2, lty = 2,
col = adjustcolor("red", 1))
insert.data.points <- as_tibble(model.drm$data[-3]) %>%
mutate(conc.r = 1/conc, V.r = 1/V) %>%
filter(conc != 0)
par(fig = c(0.4,0.95, 0.05, 0.65), new = T)
plot(V.r ~ conc.r, data = insert.data.points, type = "p",
col = insert.data.points$orig.condition,
ylab = expression("V"^-1),
xlab = expression("[ADP]"^-1),
axes = F,
frame.plot = T,
mgp = c(0.3,1,1),
xlim = c(-0.03, 0.2),
ylim = c(-0.001, 0.02))
abline(v = 0, lwd = 2, col = "grey50")
abline(h = 0, lwd = 2, col = "grey50")
abline(a = 1/coefs[[1]], b= coefs[[3]]/coefs[[1]], col = "black")
abline(a = 1/coefs[[2]], b= coefs[[4]]/coefs[[2]], col = "red")
x <- rnorm(100)
y <- rbinom(100, 1, 0.5)
dev.off()
setwd("~/apoptolidin/ED_Fig3e")
