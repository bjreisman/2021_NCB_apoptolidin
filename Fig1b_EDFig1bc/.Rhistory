inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)
data.tidy
#dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
#dev.off()
synergy.score <- CalculateSynergy(dose.response.mat)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
dev.off()
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
par("mar")
par(mar=c(5,4,4,2) + 0.1)
#dev.off()
#install.packages("SpatialExtremes")
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
par(mar)
par("mar")
par(mar=c(5.1,4.1,4.1,2.1))
par("mar")
#dev.off()
#install.packages("SpatialExtremes")
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
par(mar=c(5.1,4.1,4.1,2.1))
par("mar")
data.tidy
par("mar")
par(mar=c(1,1,1,1))
#dev.off()
#install.packages("SpatialExtremes")
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
par(mar=c(5.1,4.1,4.1,2.1))
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
png("synergyscore.png", width = 8, height = 5, units = "in", res = 300)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
dev.off()
png("synergyscore_zip.png", width = 8, height = 5, units = "in", res = 300)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
?CalculateSynergy()
#dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
#dev.off()
synergy.score <- CalculateSynergy(dose.response.mat, method = "Bliss")
#?CalculateSynergy()
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
dev.off()
#?CalculateSynergy()
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
png("synergyscore_bliss.png", width = 8, height = 5, units = "in", res = 300)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
PlotDoseResponse(dose.response.mat, save.file = TRUE)
PlotDoseResponse(dose.response.mat)
dev.off()
dev.off()
PlotDoseResponse(dose.response.mat)
PlotDoseResponse(dose.response.mat, save.file = T)
dose.response.mat
dose.response.mat$drug.pairs
dose.response.mat$dose.response.mats
rownames(dose.response.mat)
rownames(dose.response.mat$dose.response.mats)
rownames(dose.response.mat$dose.response.mats$`1`)
#dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
#dev.off()
?PlotDoseResponse
dose.response.mat <- ReshapeData(data.tidy)
PlotDoseResponse(dose.response.mat, save.file = T)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
PlotDoseResponse(dose.response.mat)
data.tidy
data.tidy$conc_c
data.tidy
data.tidy$conc_c
data("mathews_screening_data")$conc_c
msd<- data("mathews_screening_data")
msd
msd
data("mathews_screening_data")
mathews_screening_data
mathews_screening_data$conc_c
dose.response.mat <- ReshapeData(data.tidy %>% as.data.frame())
PlotDoseResponse(dose.response.mat)
dose.response.mat
dose.response.mat$dose.response.mats
dose.response.mat$adjusted.response.mats
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
?PlotDoseResponse
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("synergyfinder")
library(tidyverse)
library(synergyfinder)
list.files()
data.mv411 <-
read_tsv("MV411_Ven_Ammo_Synergy.txt", skip = 2)[1:8, 3:14] %>%
mutate(row = LETTERS[1:8]) %>%
dplyr::select(row, everything()) %>%
gather(col, abs, -row) %>%
mutate(col = as.numeric(col)) %>%
arrange(row, col)
ammo.lut   <- tibble(row = LETTERS[1:8],
conc_r =c(c(100 / sqrt(10)^c(0:6)), 0),
drug_row = rep("AmmoA", times = 8))
#ammo.lut
ven.lut   <- tibble(col = 3:10,
conc_c =c(c(100 / sqrt(10)^c(0:6)), 0),
drug_col = rep("Ven", times = 8))
data.tidy <- data.mv411 %>%
inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)
data.tidy
dose.response.mat <- ReshapeData(data.tidy %>% as.data.frame())
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
data.tidy %>%
as.matrix()
mathews_screening_data
data.tidy %>%
as.data.frame()
mathews_screening_data
data.tidy %>%
as.data.frame()
data.tidy %>%
mutate(conc_c = signif(conc_c, 2),
conc_r = signif(conc_r, 2))
data.tidy %>%
mutate(conc_c = signif(conc_c, 3),
conc_r = signif(conc_r, 3)) %>%
as.data.frame()
dose.response.mat <- ReshapeData(data.tidy %>% as.matrix())
dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
data.tidy <- data.mv411 %>%
inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)%>%
mutate(conc_c = signif(conc_c, 3),
conc_r = signif(conc_r, 3)) %>%
as.data.frame()
dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
data.tidy
data("mathews_screening_data")
data <- ReshapeData(mathews_screening_data)
PlotDoseResponse(data)
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
?PlotDoseResponse
png("synergyscore_bliss.png", width = 8, height = 5, units = "in", res = 300)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
synergy.score <- CalculateSynergy(dose.response.mat, method = "Bliss")
#?CalculateSynergy()
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
png("synergyscore_bliss.png", width = 8, height = 5, units = "in", res = 300)
PlotSynergy(synergy.score, type = "all", save.file = TRUE)
dev.off()
#?CalculateSynergy()
png("synergydoseresponse.png", width = 8, height = 5, units = "in", res = 300)
PlotDoseResponse(dose.response.mat)
dev.off()
dev.off()
dev.off()
#?CalculateSynergy()
png("synergydoseresponse.png", width = 12, height = 6, units = "in", res = 300)
PlotDoseResponse(dose.response.mat)
dev.off()
dev.off()
dev.off()
ammo.lut   <- tibble(row = LETTERS[1:8],
conc_r =c(c(100 / sqrt(10)^c(0:7)), 0),
drug_row = rep("AmmoA", times = 8))
#ammo.lut
ven.lut   <- tibble(col = 3:10,
conc_c =c(c(100 / sqrt(10)^c(0:7)), 0),
drug_col = rep("Ven", times = 8))
data.tidy <- data.mv411 %>%
inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)%>%
mutate(conc_c = signif(conc_c, 3),
conc_r = signif(conc_r, 3)) %>%
as.data.frame()
data.tidy
dose.response.mat <- ReshapeData(data.tidy)
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
#?PlotDoseResponse
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
#?PlotDoseResponse
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
#?PlotDoseResponse
dev.off()
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
dose.response.mat
data.tidy <- data.mv411 %>%
inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)%>%
mutate(conc_c = signif(conc_c, 3),
conc_r = signif(conc_r, 3)) %>%
as.data.frame()
data.tidy
dose.response.mat <- ReshapeData(data.tidy)
dose.response.mat
#ammo.lut
ven.lut   <- tibble(col = 3:10,
conc_c =c(c(100 / sqrt(10)^c(0:7)), 0),
drug_col = rep("Ven", times = 8))
ammo.lut   <- tibble(row = LETTERS[1:8],
conc_r =c(c(100 / sqrt(10)^c(0:7))),
drug_row = rep("AmmoA", times = 8))
#ammo.lut
ven.lut   <- tibble(col = 3:10,
conc_c =c(c(100 / sqrt(10)^c(0:7))),
drug_col = rep("Ven", times = 8))
data.tidy <- data.mv411 %>%
inner_join(ammo.lut) %>%
inner_join(ven.lut) %>%
rename(response = "abs") %>%
mutate(block_id = 1,
conc_r_unit = "nM",
conc_c_unit = "nM") %>%
dplyr::select(-row, -col) %>%
mutate(response = response/max(response)*100)%>%
mutate(conc_c = signif(conc_c, 3),
conc_r = signif(conc_r, 3)) %>%
as.data.frame()
data.tidy
dose.response.mat <- ReshapeData(data.tidy)
dose.response.mat
#png("synergyplot.png", width = 8, height = 8, units = "in", res = 300)
#plot1 <- PlotDoseResponse(dose.response.mat)
#plot1
dev.off()
#?PlotDoseResponse
#dose.response.mat$adjusted.response.mats
#?PlotDoseResponse
#?PlotDoseResponse
dev.off()
PlotDoseResponse(dose.response.mat, save.file = T, file.type = "png")
dose.response.mat
PlotDoseResponse(dose.response.mat)
dose.response.mat
dose.response.mat$dose.response.mats
setwd("~/apoptolidin/Fig1b")
---
title: "Apoptolidin A"
author: "Benjamin Reisman"
date: "1/20/2020"
output: html_document
editor_options:
chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(drc)
data.ammo <- NULL
data.ammo
data.ammo <- read_tsv("MV411_AmmoA_AmmoAPA.txt", skip = 2)[1:8, 3:14] %>%
mutate(row = LETTERS[1:8]) %>%
dplyr::select(row, everything()) %>%
gather(col, abs, -row) %>%
mutate(col = as.numeric(col)) %>%
arrange(row, col) %>%
mutate(compound = rep(
c(
"NA",
"Ammocidin A",
"Ammocidin A",
"Ammocidin A",
"Ammocidin A-PA",
"NA",
"Ammocidin A-PA",
"NA"
),
each = 12),
conc = rep(c(NA, c(1000 / sqrt(10)^c(0:8)), 0, NA),
times = 8))
data.apo <-
read_tsv("MV411_ApoA_ApoAPA.txt", skip = 2)[1:8, 3:14] %>%
mutate(row = LETTERS[1:8]) %>%
dplyr::select(row, everything()) %>%
gather(col, abs, -row) %>%
mutate(col = as.numeric(col)) %>%
arrange(row, col) %>%
mutate(compound = rep(
c(
"NA",
"Apoptolidin A",
"Apoptolidin A",
"Apoptolidin A",
"Apoptolidin A-PA",
"Apoptolidin A-PA",
"Apoptolidin A-PA",
"NA"
),
each = 12),
conc = rep(c(NA, c(1000 / sqrt(10)^c(0:8)), 0, NA),
times = 8))
data.apo
data.apoH <-
read_tsv("MV411_ApoH_ApoHPA.txt", skip = 2)[1:8, 3:14] %>%
mutate(row = LETTERS[1:8]) %>%
dplyr::select(row, everything()) %>%
gather(col, abs, -row) %>%
mutate(col = as.numeric(col)) %>%
arrange(row, col) %>%
mutate(compound = rep(
c(
"NA",
"Apoptolidin H",
"Apoptolidin H",
"Apoptolidin H",
"Apoptolidin H-PA",
"Apoptolidin H-PA",
"Apoptolidin H-PA",
"NA"
),
each = 12),
conc = rep(c(NA, c(1000 / sqrt(10)^c(0:8)), 0, NA),
times = 8))
lookup <- tibble(compound = c("Apoptolidin A", "Apoptolidin A-PA", "Ammocidin A"),
compound_n = c("1", "2", "3"))
data.tidy <- rbind(data.apo, data.apoH, data.ammo) %>%
left_join(lookup)
data.crc <- data.tidy %>%
#  filter(compound %in% c("Apoptolidin A", "Apoptolidin A-PA", "Ammocidin A")) %>%
filter(!is.na(conc)) %>%
filter(compound != "NA")
data.crc %>%
ggplot(aes(x=conc, y = abs)) +
geom_point() +
geom_smooth() +
scale_x_log10() +
facet_wrap(~compound)
data.apo
data.apoH <-
read_tsv("MV411_ApoH_ApoHPA.txt", skip = 2)[1:8, 3:14] %>%
mutate(row = LETTERS[1:8]) %>%
dplyr::select(row, everything()) %>%
gather(col, abs, -row) %>%
mutate(col = as.numeric(col)) %>%
arrange(row, col) %>%
mutate(compound = rep(
c(
"NA",
"Apoptolidin H",
"Apoptolidin H",
"Apoptolidin H",
"Apoptolidin H-PA",
"Apoptolidin H-PA",
"Apoptolidin H-PA",
"NA"
),
each = 12),
conc = rep(c(NA, c(1000 / sqrt(10)^c(0:8)), 0, NA),
times = 8))
lookup <- tibble(compound = c("Apoptolidin A", "Apoptolidin A-PA", "Ammocidin A"),
compound_n = c("1", "2", "3"))
data.tidy <- rbind(data.apo, data.apoH, data.ammo) %>%
left_join(lookup)
data.crc <- data.tidy %>%
#  filter(compound %in% c("Apoptolidin A", "Apoptolidin A-PA", "Ammocidin A")) %>%
filter(!is.na(conc)) %>%
filter(compound != "NA")
data.crc %>%
ggplot(aes(x=conc, y = abs)) +
geom_point() +
geom_smooth() +
scale_x_log10() +
facet_wrap(~compound)
data.crc
library(drc)
data.crc
model.drm <- drm (abs ~ conc, compound,
data = data.crc,
fct = LL.4())
drc::ED(model.drm, 50)
e(model.drm)
plot(model.drm, type = "bars")
mypallete <- c("#5e3c99", "#b2abd2", "#e66101")
svglite::svglite("Fig1B.svg", width = 2.5, height = 1.75, pointsize = 7)
par(mar = c(4,4,1,1) + 0.1)
#?par
plot(model.drm,
type = "average",
log = "x",
pch = 1,
xlab = "Dose (nM)",
ylab =  expression("Viability"),
col = T,
#     col = mypallete,
normal = T,
# lty = 1,
# ylim = c(0,ymax),
legend = T,
xt = c(1000 / sqrt(10)^c(0:9)),
yt = c(0.0 ,0.2, 0.4, 0.6, 0.8, 1.0, 1.2),
ytlab = c(0,"", "", "", "", 100, ""),
xtlab = c("1000", "", "100", "", "10","", "1", "", "0.1"),
bp = 0.03,
broken = T)
dev.off()
legend(x = 0, y = ymax,
legend = levels(insert.data.points$condition),
col = mypallete, pch = c(2, 1), lty = c(1,1),
bty = 'n')
#?par
plot(model.drm,
type = "average",
log = "x",
pch = 1,
xlab = "Dose (nM)",
ylab =  expression("Viability"),
col = T,
#     col = mypallete,
normal = T,
# lty = 1,
# ylim = c(0,ymax),
legend = T,
xt = c(1000 / sqrt(10)^c(0:9)),
yt = c(0.0 ,0.2, 0.4, 0.6, 0.8, 1.0, 1.2),
ytlab = c(0,"", "", "", "", 100, ""),
xtlab = c("1000", "", "100", "", "10","", "1", "", "0.1"),
bp = 0.03,
broken = T)
